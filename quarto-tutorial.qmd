---
title: "Інструкція з використання Quarto для підготовки результатів наукових досліджень"
author: "Юрій Клебан"
format: 
  html:
    code-tools: true
    code-line-numbers: true
---

:::{.callout-important}
Увага! У тексті публікації зустрічастимуться подібні вставки, вони не є частиною контенту, а використані для звернення уваги студентів на деякі моменти підготовки роботи. Не потрібно подібні вставки використовувати під час написання звіту.
:::

:::{.callout-note}
Зверху справа можна переглянути "початковий" код розмітки цього документа і користуватися ним для підготовки алсної публікації: `</> Code`.
:::

---

#### Анотація

У статті описано процес підготовки матеріалів фінального проєкту з використанням технології [`Quarto`](https://quarto.org). `Quarto` дозволяє аналітикам та науковцям обєднати текстові, графічні матеріали та виконуваний код в один документ.

Увага! Quarto побудовано на основі `rMarkdown` і відмінності мінімальні.

:::{.callout-note}
Розширити анотацію до 250 символів. Перевірити кількість символів, наприклад, можна вставивши текст у `Notepad` або `Microsoft Word`.
:::

#### Ключові слова

`quarto`, `r`, `RStudio Desktop`, `підготовка звітів`, `фінальний проєкт`.

## Основна частина

### Інсталяція

Першим етапом роботи з технологією `Quarto` є інсталяція. Окрім уже встановлених на ПК `R` та `RStudio` потрібно завантажиити та виконати кроки зі встановлення [`Quarto CLI`](https://quarto.org/docs/get-started/) (`Command Line Interface`) для запуску операцій рендерінгу розмітки та ноутбуків.

Наступний етап передбачає вибір інструменту для написання коду: `Visual Studio Code`, `RStudio Desktop`, `Jupyter Notebook\Lab` або будь-який текстовий редактор. 

### Початок роботи з документом

Для початку роботи варто ініціалізувати заголовок документа, вказавши інформацію про публікацію та автора/ів. Також у заголовку можуть бути додані додаткові параметри налаштування документа.

```r
---
title: "Інструкція з використання Quarto для підготовки результатів наукових досліджень"
author: "Юрій Клебан"
format: 
  html:
    code-fold: true # дозволяє отримати згорнутий код
    code-tools: true # додає зверху справа публікації кнопку для перегляду початкового коду розмітки
    code-line-numbers: true # показує номери рядків коду у блоках
execute:
  echo: false # приховує весь код, лишає тільки результати обчислень
---
```

Зверніть увагу, якщо Ви бажаєте візуалізувати деякі дані, що не мають виконуваного коду, то варто скористатися записом без `{}` (фігурних дужок), а замість `r` можна вписати і іншу мову програмування:

<pre><code>
```r
# Приклад візуалізації коду "як є".
```
</code></pre>

Якщо ж код має виконуватися, то є кілька варіантів його представлення:

1. Якщо потрібно вивести і код і результат у документ, то вказуємо `{r}`:

```{r}
x <- 10
x
```

Виведення тільки результату, без коду:

```{r}
#| echo: false
x <- 10
x
```

:::{.callout-note}
Використовуйте `echo`, адже ми формуємо наукову публікацію, а не ноутбук!
:::

Якщо Вам потрібно прямо у тексті роботи вивести результати обчислень, то можна скористатися записом типу `r round(sqrt(x), 2)` та отримати `r round(sqrt(x), 2)`, тобто очислення будуь відбуватися "на льоту".

### Оформлення текстів

Оформлення текствої інформації

### Публікація зображень

### Табличне представлення даних

Візуалізація табличної інформації може бути представлена двома способами:

-[x] у вигляді розмітки;

-[x] візуалізація датафрейму.

```
| fruit  | price  |
|--------|--------:
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Ціна на фрукти {tbl-colwidths="[60,40]"}
```

Для публікації інформації з наявного датафрейму можна використовувати використати звичайну виведення:

```{r}
  mtcars[1:3, 1:5]
```

Проте візуально інформацію зручніше візуалізувати за допомогою функції `knitr::kable()` та з використання спеціальних підписів у заголовку коду:

```{r}
#| label: mtcars-table
#| tbl-cap: "Назва таблиці"
#| tbl-cap-location: top
#| tbl-subcap: "Джерело: дані з пакету carData"

knitr::kable(
  mtcars[1:3, 1:5]
)
```

### Побудова діаграм та графіків

```{r}
#| label: fig-cap-margin
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: bottom
#| fig-subcap: "Дані з пакету `CarData`"

library(ggplot2)
mtcars2 <- mtcars
mtcars2$am <- factor(
  mtcars$am, labels = c('automatic', 'manual')
)
ggplot(mtcars2, aes(hp, mpg, color = am)) +
  geom_point() +  geom_smooth(formula = y ~ x, method = "loess") +
  theme(legend.position = 'bottom')
```

### Формули та числові позначення

## Висновки

## Список використаних джерел

1. https://quarto.org/

```{r}
1 + 1
```
